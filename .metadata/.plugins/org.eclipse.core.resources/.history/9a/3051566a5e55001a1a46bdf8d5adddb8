package grider;

public class BinaryNode {

	int data;
	BinaryNode left;
	BinaryNode right;

	BinaryNode(int val) {
		data = val;
		left = null;
		right = null;
	}

	void insert(int val) {

		insertRec(this, val);
	}

	void insertRec(BinaryNode node, int val) {

		if (node.data > val) {
			if (node.left == null) {
				node.left = new BinaryNode(val);
				return;
			}

			insertRec(node.left, val);

		} 
		else if (node.data < val) {

			if (node.right == null) {
				node.right = new BinaryNode(val);
				return;
			}

			insertRec(node.right, val);
		}

	}

	boolean contains(int val) {
		return containsRec(this, val);
	}

	boolean containsRec(BinaryNode node, int val) {

		if (node == null) {
			return false;

		}

		if (node.data == val) {
			return true;
		}

		if (node.data > val) {
			System.out.println(node.data);
			return containsRec(node.left, val);
		} else if (node.data < val) {
			System.out.println(node.data);
			return containsRec(node.right, val);
		}

		return false;

	}

	public static void main(String args[]) {

		BinaryNode root = new BinaryNode(10);
		root.insert(1);
		root.insert(2);
		root.insert(3);
		root.insert(11);
		root.insert(12);
		root.insert(16);
		root.insert(15);
		root.insert(13);
		root.insert(3);

		System.out.println(root.contains(14));

	}

}
